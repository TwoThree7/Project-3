using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Control : MonoBehaviour
{
    public Transform cam;
    public Transform camZoomOut;
    public Transform camZoomIn;
    public Transform deathSpace;
    public MeshRenderer slash1;

    public KeyCode forwardKey = KeyCode.D;
    public KeyCode jumpKey = KeyCode.W;
    public KeyCode backKey = KeyCode.A;
    public KeyCode scrollOut = KeyCode.N;
    public KeyCode scrollIn = KeyCode.M;
    public KeyCode Mouse = KeyCode.Mouse1;
    public KeyCode deadKey = KeyCode.V;

    public bool jumpReady = true;
    public bool grounded;
    public float jumpCoolDown = .2f;
    public float slashCoolDown = .2f;
    public float jumpForce = 30f;
    public float playerHeight = 1f;
    public float groundDrag = 2;
    public float moveSpeed = 10f;
    public LayerMask whatIsGround;

    Rigidbody rb;
    public GameObject dropPerson;


    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody>();

        rb.freezeRotation = true;
    }



    // Update is called once per frame
    void Update()
    {
        grounded = Physics.Raycast(transform.position, Vector3.down, playerHeight * 0.5f + 0.2f, whatIsGround);
        myInput();
        SpeedControl();
        if (grounded)
        {
            rb.drag = groundDrag;
        }
        else
        {
            rb.drag = 0;
        }

    }
    void myInput()
    {
        if (Input.GetKey(forwardKey))
        {
            rb.AddForce(0f, 0f, 1f * moveSpeed);
        }
        if (Input.GetKey(backKey))
        {
            rb.AddForce(0f, 0f, -1f * moveSpeed);
        }
        if (Input.GetKey(jumpKey) && jumpReady && grounded)
        {
            jumpReady = false;
            Jump();
        }
        if (Input.GetKey(scrollOut))
        {
            cam.position = Vector3.MoveTowards(cam.position, camZoomOut.position, .2f);
        }
        if (Input.GetKey(scrollIn))
        {
            cam.position = Vector3.MoveTowards(cam.position, camZoomIn.position, .2f);
        }
        if (Input.GetKey(deadKey))
        {
            transform.position = deathSpace.position;
        }
        if (Input.GetKey(Mouse))
        {
            Attack1();
        }
    }
    void Jump()
    {
        //rb.drag = 0;
        rb.AddForce(0f, 1 * jumpForce, 0f, ForceMode.Impulse);
        //ZoomOut();
        Invoke(nameof(jumpReset), jumpCoolDown);
        //rb.drag = 5;
    }
    void jumpReset()
    {
        jumpReady = true;
    }
    void Attack1()
    {
        Debug.Log("Attack1");
        slash1.enabled = true;
        Invoke(nameof(slashDisable), slashCoolDown);
    }
    void slashDisable()
    {
        slash1.enabled = false;
    }
    private void SpeedControl()
    {
        Vector3 flatVel = new Vector3(rb.velocity.x, 0f, rb.velocity.z);
        if (flatVel.magnitude > moveSpeed)
        {
            Vector3 limitVel = flatVel.normalized * moveSpeed;
            rb.velocity = new Vector3(limitVel.x, rb.velocity.y, limitVel.z);
            // Debug.Log("SpeedControl in effect");
        }
    }

    void OnCollisionEnter(Collision collision)
    {
        if (collision.gameObject.tag == "heWillJump")
        {
            Drop sn = dropPerson.GetComponent<Drop>();
            sn.falling();
        }
    }
    void ZoomOut()
    {
        for (int i = 0; i < 10; i++)
        {
            cam.position = Vector3.MoveTowards(cam.position, camZoomOut.position, .2f);
        }
        Invoke(nameof(ZoomIn),jumpCoolDown);
    }
    void ZoomIn()
    {
        for (int i = 0; i < 10; i++)
        {
            cam.position = Vector3.MoveTowards(cam.position, camZoomIn.position, .2f);
        }
    }
}

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Drop : MonoBehaviour
{
    Rigidbody rb;
    public GameObject player;
    // Start is called before the first frame update
    void Start()
    {
        rb = GetComponent<Rigidbody>();
        rb.useGravity = false;
    }

    // Update is called once per frame
    void Update()
    {

    }
    public void falling()
    {
        rb.useGravity = true;
    }
    void OnCollisionEnter(Collision collision)
    {
        if (collision.gameObject.tag == "heWillJump")
        {
            //rb.AddForce(2f, 0f, 0f);
            rb.useGravity = true;
        }
    }
}
